name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java with Maven
      uses: actions/setup-java@v3
      with:
        java-version: '17'  
        maven-version: '3.9.2' 
        distribution: 'temurin'  

    - name: Increment version
      run: |
        sudo apt-get install -y xmlstarlet

        
        VERSION=$(xmlstarlet sel -t -m "/project/version" -v . -n pom.xml | head -n 1)
        echo "Current version extracted: '$VERSION'"

        
        if [[ -z "$VERSION" ]]; then
          echo "ERROR: No version found in pom.xml. Exiting."
          exit 1
        fi

        
        NEW_VERSION=$(echo $VERSION | awk -F. '{print $1 "." $2 "." ($3+1)}')
        echo "New version: '$NEW_VERSION'"

        
        sed -i "0,/<version>${VERSION}<\/version>/s|<version>.*</version>|<version>${NEW_VERSION}</version>|" pom.xml

        
        git config user.name "linor.ronen"
        git config user.email "linor.ronen@gmail.com"
        git commit -am "Increment patch version to $NEW_VERSION"
        git push origin master  

    - name: Build JAR
      run: mvn clean package

    - name: Build Docker Image
      run: |
      
        echo "Building Docker image with tag linorg/simple-java-maven-app:${NEW_VERSION}"

        
        if [[ -z "$NEW_VERSION" ]]; then
          echo "ERROR: NEW_VERSION is empty. Cannot proceed with Docker build."
          exit 1
        fi


        docker build -t linorg/simple-java-maven-app:${NEW_VERSION} .

    - name: Push to Docker Hub
      run: |
        # Log in to Docker Hub
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u linorg --password-stdin
        docker push linorg/simple-java-maven-app:${NEW_VERSION}
